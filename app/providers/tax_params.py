from datetime import date
from abc import ABC, abstractmethod
from app.schemas.tax import TaxParameters, TaxBracket

class TaxParamsProvider(ABC):
    @abstractmethod
    def get_params(self) -> TaxParameters: ...

class InMemoryTaxParamsProvider(TaxParamsProvider):
    def __init__(self):
        # ׳¢׳¨׳›׳™׳ ׳“׳˜׳¨׳׳™׳ ׳™׳¡׳˜׳™׳™׳ ׳׳˜׳¡׳˜׳™׳
        self._params = TaxParameters(
            cpi_series={
                # 2020 (historical data for test employment start dates)
                date(2020,1,1): 90.0, date(2020,2,1): 90.0, date(2020,3,1): 90.0,
                date(2020,4,1): 90.0, date(2020,5,1): 90.0, date(2020,6,1): 90.0,
                date(2020,7,1): 90.0, date(2020,8,1): 90.0, date(2020,9,1): 90.0,
                date(2020,10,1): 90.0, date(2020,11,1): 90.0, date(2020,12,1): 90.0,
                # 2021
                date(2021,1,1): 93.0, date(2021,2,1): 93.0, date(2021,3,1): 93.0,
                date(2021,4,1): 93.0, date(2021,5,1): 93.0, date(2021,6,1): 93.0,
                date(2021,7,1): 93.0, date(2021,8,1): 93.0, date(2021,9,1): 93.0,
                date(2021,10,1): 93.0, date(2021,11,1): 93.0, date(2021,12,1): 93.0,
                # 2022
                date(2022,1,1): 97.0, date(2022,2,1): 97.0, date(2022,3,1): 97.0,
                date(2022,4,1): 97.0, date(2022,5,1): 97.0, date(2022,6,1): 97.0,
                date(2022,7,1): 97.0, date(2022,8,1): 97.0, date(2022,9,1): 97.0,
                date(2022,10,1): 97.0, date(2022,11,1): 97.0, date(2022,12,1): 97.0,
                # 2023
                date(2023,1,1): 100.0, date(2023,2,1): 100.0, date(2023,3,1): 100.0,
                date(2023,4,1): 100.0, date(2023,5,1): 100.0, date(2023,6,1): 100.0,
                date(2023,7,1): 100.0, date(2023,8,1): 100.0, date(2023,9,1): 100.0,
                date(2023,10,1): 100.0, date(2023,11,1): 100.0, date(2023,12,1): 100.0,
                # 2024
                date(2024,1,1): 103.0, date(2024,2,1): 103.0, date(2024,3,1): 103.0,
                date(2024,4,1): 103.0, date(2024,5,1): 103.0, date(2024,6,1): 103.0,
                date(2024,7,1): 103.0, date(2024,8,1): 103.0, date(2024,9,1): 103.0,
                date(2024,10,1): 103.0, date(2024,11,1): 103.0, date(2024,12,1): 103.0,
                # 2025
                date(2025,1,1): 106.0, date(2025,2,1): 106.0, date(2025,3,1): 106.0,
                date(2025,4,1): 106.0, date(2025,5,1): 106.0, date(2025,6,1): 106.0,
                date(2025,7,1): 106.0, date(2025,8,1): 106.0, date(2025,9,1): 106.0,
                date(2025,10,1): 106.0, date(2025,11,1): 106.0, date(2025,12,1): 106.0,
                # 2026
                date(2026,1,1): 109.0, date(2026,2,1): 109.0, date(2026,3,1): 109.0,
                date(2026,4,1): 109.0, date(2026,5,1): 109.0, date(2026,6,1): 109.0,
                date(2026,7,1): 109.0, date(2026,8,1): 109.0, date(2026,9,1): 109.0,
                date(2026,10,1): 109.0, date(2026,11,1): 109.0, date(2026,12,1): 109.0,
                # 2027 (safety margin)
                date(2027,1,1): 112.0, date(2027,2,1): 112.0, date(2027,3,1): 112.0,
                date(2027,4,1): 112.0, date(2027,5,1): 112.0, date(2027,6,1): 112.0,
                date(2027,7,1): 112.0, date(2027,8,1): 112.0, date(2027,9,1): 112.0,
                date(2027,10,1): 112.0, date(2027,11,1): 112.0, date(2027,12,1): 112.0,
                # 2028-2030 (extended for calculation engine forecast)
                date(2028,1,1): 112.0, date(2028,2,1): 112.0, date(2028,3,1): 112.0,
                date(2028,4,1): 112.0, date(2028,5,1): 112.0, date(2028,6,1): 112.0,
                date(2028,7,1): 112.0, date(2028,8,1): 112.0, date(2028,9,1): 112.0,
                date(2028,10,1): 112.0, date(2028,11,1): 112.0, date(2028,12,1): 112.0,
                date(2029,1,1): 112.0, date(2029,2,1): 112.0, date(2029,3,1): 112.0,
                date(2029,4,1): 112.0, date(2029,5,1): 112.0, date(2029,6,1): 112.0,
                date(2029,7,1): 112.0, date(2029,8,1): 112.0, date(2029,9,1): 112.0,
                date(2029,10,1): 112.0, date(2029,11,1): 112.0, date(2029,12,1): 112.0,
                date(2030,1,1): 112.0, date(2030,2,1): 112.0, date(2030,3,1): 112.0,
                date(2030,4,1): 112.0, date(2030,5,1): 112.0, date(2030,6,1): 112.0,
                date(2030,7,1): 112.0, date(2030,8,1): 112.0, date(2030,9,1): 112.0,
                date(2030,10,1): 112.0, date(2030,11,1): 112.0, date(2030,12,1): 112.0,
            },
            grant_exemption_cap=60000.0,
            grant_tax_brackets=[
                TaxBracket(up_to=40000.0, rate=0.10),
                TaxBracket(up_to=None, rate=0.20),
            ],
            annuity_factor=200.0,
        )
    def get_params(self) -> TaxParameters:
        return self._params

